{"version":3,"sources":["components/InputForm.js","App.js","reportWebVitals.js","index.js"],"names":["InputForm","props","onSubmit","handleSubmit","type","value","reviewText","onChange","e","setReviewText","target","App","text","React","useState","machineLearningResponse","setMachineLearningResponse","evt","a","preventDefault","url","fetch","response","content","formatted_content","replaceAll","className","split","map","str","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAkBeA,MAhBR,SAAmBC,GACxB,OACE,uBAAMC,SAAUD,EAAME,aAAtB,UACE,iDAEE,uBACEC,KAAK,OACLC,MAAOJ,EAAMK,WACbC,SAAU,SAAAC,GAAC,OAAIP,EAAMQ,cAAcD,EAAEE,OAAOL,aAGhD,uBAAOD,KAAK,SAASC,MAAM,eCoBlBM,MAzBf,WAAgB,IAJKC,EAIN,EACuBC,IAAMC,SAAS,0BADtC,mBACNR,EADM,KACMG,EADN,OAEiDI,IAAMC,SAAS,IAFhE,mBAENC,EAFM,KAEmBC,EAFnB,KAIPb,EAAY,uCAAG,WAAOc,GAAP,qBAAAC,EAAA,6DACnBD,EAAIE,iBACJH,EAA2B,qDACrBI,EAAM,iFAAmFd,EAH5E,SAIIe,MAAMD,GAJV,cAIbE,EAJa,gBAKGA,EAASV,OALZ,OAKbW,EALa,OAMbC,EAAoBD,EAAQE,WAAW,IAAK,MAClDT,EAA2BQ,GAPR,4CAAH,sDAUlB,OACE,qBAAKE,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,2DACA,cAAC,EAAD,CAAWpB,WAAYA,EAAYG,cAAeA,EAAeN,aAAcA,KAtBlES,EAuBAG,EAtBZH,EAAKe,MAAM,MAAMC,KAAI,SAACC,EAAKC,GAAN,OAAgB,4BAAgBD,GAARC,aCOvCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eac7b772.chunk.js","sourcesContent":["import React from 'react';\n\nexport function InputForm(props) {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <label>\n        Review text:\n        <input\n          type=\"text\"\n          value={props.reviewText}\n          onChange={e => props.setReviewText(e.target.value)}\n        />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n}\n\nexport default InputForm\n","import './App.css';\nimport InputForm from './components/InputForm';\nimport React from 'react'\n\nfunction NewlineText(text) {\n  return text.split('\\n').map((str, index) => <p key={index}>{str}</p>);\n}\n\nfunction App() {\n  const [reviewText, setReviewText] = React.useState(\"Write your review here\");\n  const [machineLearningResponse, setMachineLearningResponse] = React.useState(\"\");\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n    setMachineLearningResponse(\"Calculating results... (this might take som time)\")\n    const url = \"https://europe-west1-tdt4173-ml-project.cloudfunctions.net/function-1?message=\" + reviewText\n    const response = await fetch(url);\n    const content = await response.text()\n    const formatted_content = content.replaceAll(\"|\", \"\\n\")\n    setMachineLearningResponse(formatted_content)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>TDT4173 project - webpage</h2>\n        <InputForm reviewText={reviewText} setReviewText={setReviewText} handleSubmit={handleSubmit}/>\n        {NewlineText(machineLearningResponse)}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}